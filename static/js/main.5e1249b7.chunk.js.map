{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","currentPage","totalPage","perPage","setCurrentPage","_jsxs","className","children","_jsx","concat","onClick","href","map","num","items","App","setPerPage","useState","setTotal","Math","ceil","defaultValue","onChange","event","parseInt","currentTarget","value","id","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCCF,MAAMG,EAAwCC,IAM9C,IAN+C,YACpDC,EAAW,UACXC,EAAS,QACTN,EAAO,QACPO,EAAO,eACPC,GACDJ,EACC,OACEK,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAS,aAAAG,OAAeR,GAAe,EAAI,WAAa,IAAKM,SAC/DC,cAAA,KACEE,QAASA,KACHT,EAAc,GAChBG,EAAeH,EAAc,IAGjC,UAAQ,WACRK,UAAU,YACVK,KAAI,IAAAF,OAAMR,GACV,gBAAeA,GAAe,EAAI,OAAS,QAAQM,SACpD,WAIFX,EAAQgB,KAAIC,GACXL,cAAA,MAEEF,UAAS,aAAAG,OAAeR,IAAgBY,EAAM,SAAW,IAAKN,SAE9DC,cAAA,KACE,UAAQ,WACRE,QAASA,IAAMN,EAAeS,GAC9BP,UAAU,YACVK,KAAI,IAAAF,OAAMI,GAAMN,SAEfM,KATEA,KAaTL,cAAA,MACEF,UAAS,aAAAG,OACPR,IAAgBC,GAAaC,EAAUF,GAAeC,EAClD,WACA,IACHK,SAEHC,cAAA,KACEE,QAASA,KACHT,GAAe,GAAKA,EAAcC,GACpCE,EAAeH,EAAc,IAGjC,UAAQ,WACRK,UAAU,YACVK,KAAK,QACL,gBACEV,IAAgBC,GAAaC,EAAUF,GAAeC,EAClD,OACA,QACLK,SACF,eC7DHO,EAAQrB,EAAW,EAAG,IAAImB,KAAIf,GAAC,QAAAY,OAAYZ,KAEpCkB,EAAgBA,KAC3B,MAAOZ,EAASa,GAAcC,mBAAS,IAChChB,EAAaG,GAAkBa,mBAAS,IACxCf,EAAWgB,GAAYD,mBAAS,IAajCrB,EAAUH,EAAW,EADR0B,KAAKC,KAAKlB,EAAYC,IAGzC,OACEE,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAE,OACvBR,EAAW,YAAAQ,OAAWR,EAAcE,EAAUA,EAAU,EAAC,OAAAM,OAChER,IAAgBkB,KAAKC,KAAKlB,EAAYC,GAClCD,EACAD,EAAcE,EAAO,aAI7BE,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACEgB,aAAc,EACdC,SAzBcC,IACtBP,EAAWQ,SAASD,EAAME,cAAcC,MAAO,KAC/CR,EAAShB,GACTE,EAAe,IAuBP,UAAQ,kBACRuB,GAAG,kBACHrB,UAAU,eAAcC,SAAA,CAExBC,cAAA,UAAQkB,MAAM,IAAGnB,SAAC,MAClBC,cAAA,UAAQkB,MAAM,IAAGnB,SAAC,MAClBC,cAAA,UAAQkB,MAAM,KAAInB,SAAC,OACnBC,cAAA,UAAQkB,MAAM,KAAInB,SAAC,YAIvBC,cAAA,SAAOoB,QAAQ,kBAAkBtB,UAAU,qBAAoBC,SAAC,sBAIlEC,cAACT,EAAU,CACTG,UAAWA,EACXC,QAASA,EACTF,YAAaA,EACbG,eAAgBA,EAChBR,QAASA,IAEXY,cAAA,MAAAD,SAnDKO,EAAMe,MAAM5B,EAAcE,EAAUA,EAASF,EAAcE,GAoD9CS,KAAIkB,GAClBtB,cAAA,MAAI,UAAQ,OAAMD,SACfuB,GADqBA,WCjElCC,IAASC,OAAOxB,cAACO,EAAG,IAAKkB,SAASC,eAAe,U","file":"static/js/main.5e1249b7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","interface PaginationProps {\n  currentPage: number;\n  totalPage: number;\n  numbers: number[];\n  perPage: number;\n  setCurrentPage: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPage,\n  numbers,\n  perPage,\n  setCurrentPage,\n}) => {\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage <= 1 ? 'disabled' : ''}`}>\n        <a\n          onClick={() => {\n            if (currentPage > 1) {\n              setCurrentPage(currentPage - 1);\n            }\n          }}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage <= 1 ? 'true' : 'false'}\n        >\n          «\n        </a>\n      </li>\n      {numbers.map(num => (\n        <li\n          key={num}\n          className={`page-item ${currentPage === num ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            onClick={() => setCurrentPage(num)}\n            className=\"page-link\"\n            href={`#${num}`}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n      <li\n        className={`page-item ${\n          currentPage === totalPage || perPage * currentPage >= totalPage\n            ? 'disabled'\n            : ''\n        }`}\n      >\n        <a\n          onClick={() => {\n            if (currentPage >= 1 && currentPage < totalPage) {\n              setCurrentPage(currentPage + 1);\n            }\n          }}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={\n            currentPage === totalPage || perPage * currentPage >= totalPage\n              ? 'true'\n              : 'false'\n          }\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotal] = useState(42);\n\n  const itemsToPrint = () => {\n    return items.slice(currentPage * perPage - perPage, currentPage * perPage);\n  };\n\n  const onSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(parseInt(event.currentTarget.value, 10));\n    setTotal(totalPage);\n    setCurrentPage(1);\n  };\n\n  const totalPages = Math.ceil(totalPage / perPage);\n  const numbers = getNumbers(1, totalPages);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${currentPage * perPage - perPage + 1} - ${\n          currentPage === Math.ceil(totalPage / perPage)\n            ? totalPage\n            : currentPage * perPage\n        } of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            defaultValue={5}\n            onChange={onSelectChange}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        totalPage={totalPage}\n        perPage={perPage}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        numbers={numbers}\n      />\n      <ul>\n        {itemsToPrint().map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}